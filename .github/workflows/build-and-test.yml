#
# This source file is part of the TemplatePackage open source project
#
# SPDX-FileCopyrightText: 2022 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Build and Test

on:
  workflow_call:

jobs:
  reuse_action:
    name: REUSE Compliance Check
    uses: StanfordBDHG/.github/.github/workflows/reuse.yml@v2
  swiftlint:
    name: SwiftLint
    uses: StanfordBDHG/.github/.github/workflows/swiftlint.yml@v2
  download_openapi:
    name: Download OpenAPI YAML from CHOIR Repository
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download OpenAPI YAML
        env:
          GITHUB_TOKEN: ${{ secrets.CHOIR_REPO_TOKEN }} 
        run: |
          curl -L -H "Authorization: token $GITHUB_TOKEN" -o Sources/SpeziCHOIR/Network/openapi.yml \
            https://raw.githubusercontent.com/susom/choir/master/choir-api/choir-api.yaml

      - name: Validate OpenAPI YAML
        run: |
          if [ ! -s Sources/SpeziCHOIR/Network/openapi.yml ]; then
            echo "Error: OpenAPI file is empty or missing!"
            exit 1
          fi
          echo "OpenAPI file downloaded successfully:"
          cat Sources/SpeziCHOIR/Network/openapi.yml

      - name: Upload OpenAPI YAML as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-yaml
          path: Sources/SpeziCHOIR/Network/openapi.yml
  setup_environment:
    name: Setup Build Environment
    needs: download_openapi
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download OpenAPI YAML Artifact
        uses: actions/download-artifact@v4
        with:
          name: openapi-yaml
          path: Sources/SpeziCHOIR/Network/

      - name: Upload Prepared Environment
        uses: actions/upload-artifact@v4
        with:
          name: build-environment
          path: Sources/SpeziCHOIR/Network/
  packageios:
    name: Build and Test Swift Package iOS
    needs: setup_environment
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted"]'
      scheme: SpeziCHOIR-Package
      resultBundle: SpeziCHOIR-Package-iOS.xcresult
      artifactname: SpeziCHOIR-Package-iOS.xcresult
  ios:
    name: Build and Test iOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted"]'
      path: 'Tests/UITests'
      scheme: TestApp
      resultBundle: TestApp-iOS.xcresult
      artifactname: TestApp-iOS.xcresult
  ipados:
    name: Build and Test iPadOS
    uses: StanfordSpezi/.github/.github/workflows/xcodebuild-or-fastlane.yml@v2
    with:
      runsonlabels: '["macOS", "self-hosted"]'
      path: 'Tests/UITests'
      scheme: TestApp
      destination: 'platform=iOS Simulator,name=iPad Air 13-inch (M2)'
      resultBundle: TestApp-iPadOS.xcresult
      artifactname: TestApp-iPadOS.xcresult
  uploadcoveragereport:
    name: Upload Coverage Report
    needs: [packageios, ios, ipados]
    uses: StanfordBDHG/.github/.github/workflows/create-and-upload-coverage-report.yml@v2
    with:
      coveragereports: SpeziCHOIR-Package-iOS.xcresult TestApp-iOS.xcresult TestApp-iPadOS.xcresult
    secrets:
      token: ${{ secrets.CODECOV_TOKEN }}